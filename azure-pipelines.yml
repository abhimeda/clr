resources:
  repositories:
 
  - repository: hip_repo # The name used to reference this repository in the checkout step
    type: github
    endpoint: abhimeda
    name: abhimeda/HIP
    ref: rocm-6.0.x
 
  - repository: hipcc_repo # The name used to reference this repository in the checkout step
    type: github
    endpoint: abhimeda
    name: abhimeda/HIPCC
    ref: rocm-6.0.x
 
  - repository: hipother_repo # The name used to reference this repository in the checkout step
    type: github
    endpoint: abhimeda
    name: abhimeda/hipother
    ref: rocm-6.0.x
 
  - repository: hip_tests # The name used to reference this repository in the checkout step
    type: github
    endpoint: abhimeda
    name: abhimeda/hip-tests
    ref: rocm-6.0.x

trigger:
- rocm-6.0.x

# jobs:
#   # - job: Building_HIP
#   #   displayName: "Building HIP"
#   #   pool: NV31
#   #   timeoutInMinutes: 60
#   #   steps:
#   #     - checkout: self
#   #     - checkout: hip_repo
#   #     - checkout: hipcc_repo
#   #     - checkout: hipother_repo
#   #     - checkout: hip_tests
#   #     - script: |
#   #         pwd
#   #         export CLR_DIR="$(readlink -f clr)"
#   #         export HIP_DIR="$(readlink -f HIP)"
#   #         export HIP_OTHER="$(readlink -f hipother)"
#   #         export HIPCC_DIR="$(readlink -f HIPCC)"
#   #         export HIPTESTS_DIR="$(readlink -f hip-tests)"
          
#   #         cd "$HIPCC_DIR"
#   #         mkdir -p build; cd build
#   #         cmake ..
#   #         make -j4
    
#   #         cd "$CLR_DIR"
#   #         mkdir -p build; cd build
#   #         cmake -DHIP_COMMON_DIR=$HIP_DIR -DHIP_PLATFORM=amd -DCMAKE_PREFIX_PATH="/opt/rocm/" -DCMAKE_INSTALL_PREFIX=$PWD/install -DHIPCC_BIN_DIR=$HIPCC_DIR/build -DHIP_CATCH_TEST=0 -DCLR_BUILD_HIP=ON -DCLR_BUILD_OCL=OFF ..
#   #         make -j$(nproc)
#   #         echo "rocm" | sudo -S make install

#   - job: Running_Tests
#     displayName: "Running Tests"
#     # dependsOn: Building_HIP
#     pool: NV31
#     timeoutInMinutes: 60
#     continueOnError: true
#     steps:
#     - checkout: none
#     - script: |
#           pwd 
#           cd /home/rocm/AzureAgent/myagent/_work/13/s
#           export CLR_DIR="$(readlink -f clr)"
#           export HIP_DIR="$(readlink -f HIP)"
#           export HIP_OTHER="$(readlink -f hipother)"
#           export HIPCC_DIR="$(readlink -f HIPCC)"
#           export HIPTESTS_DIR="$(readlink -f hip-tests)"
#           cd "$HIPTESTS_DIR"
#           mkdir -p build; cd build
#           cmake ../catch -DHIP_PLATFORM=amd -DHIP_PATH=$CLR_DIR/build/install # or any path where HIP is installed, for example, /opt/rocm.
#           make -j$(nproc) build_tests # build tests
#           cd catch_tests && ctest -E "Unit_hipGetDeviceProperties_ArchPropertiesTst|Unit_hipGetSetDevice_MultiThreaded"
#           ls "$HIPTESTS_DIR"
#     # - task: PublishTestResults@2
#     #   inputs:
#     #     testResultsFormat: 'ctest'
#     #     testResultsFiles: ''
#     #   condition: succeededOrFailed()
#       displayName: 'Tests'
    



pool: NV31

steps:
- script: echo "rocm" | sudo -S rm -rf *
- checkout: self
- checkout: hip_repo
- checkout: hipcc_repo
- checkout: hipother_repo
- checkout: hip_tests
- script: |
    export CLR_DIR="$(readlink -f clr)"
    export HIP_DIR="$(readlink -f HIP)"
    export HIP_OTHER="$(readlink -f hipother)"
    export HIPCC_DIR="$(readlink -f HIPCC)"
    export HIPTESTS_DIR="$(readlink -f hip-tests)"
    cd "$HIPCC_DIR"
    mkdir -p build; cd build
    cmake ..
    make -j4
  displayName: 'build hipcc'
- script: |
    export CLR_DIR="$(readlink -f clr)"
    export HIP_DIR="$(readlink -f HIP)"
    export HIP_OTHER="$(readlink -f hipother)"
    export HIPCC_DIR="$(readlink -f HIPCC)"
    export HIPTESTS_DIR="$(readlink -f hip-tests)"
    cd "$CLR_DIR"
    mkdir -p build; cd build
    cmake -DHIP_COMMON_DIR=$HIP_DIR -DHIP_PLATFORM=amd -DCMAKE_PREFIX_PATH="/opt/rocm/" -DCMAKE_INSTALL_PREFIX=$PWD/install -DHIPCC_BIN_DIR=$HIPCC_DIR/build -DHIP_CATCH_TEST=0 -DCLR_BUILD_HIP=ON -DCLR_BUILD_OCL=OFF ..
    make -j$(nproc)
    echo "rocm" | sudo -S make install
  displayName: 'build and install clr'
- script: |
    export CLR_DIR="$(readlink -f clr)"
    export HIP_DIR="$(readlink -f HIP)"
    export HIP_OTHER="$(readlink -f hipother)"
    export HIPCC_DIR="$(readlink -f HIPCC)"
    export HIPTESTS_DIR="$(readlink -f hip-tests)"
    cd "$HIPTESTS_DIR"
    mkdir -p build; cd build
    cmake ../catch -DHIP_PLATFORM=amd -DHIP_PATH=$CLR_DIR/build/install # or any path where HIP is installed, for example, /opt/rocm.
    make -j$(nproc) build_tests # build tests
  displayName: 'build tests'
- script: |
    cd catch_tests
    ctest -O testoutput.log -E "Unit_hipGetDeviceProperties_ArchPropertiesTst|Unit_hipGetSetDevice_MultiThreaded" --output-on-failure # to run all tests.
- script: pwd
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'ctest'
    testResultsFiles: '**/catch_tests/testoutput.log' 
  condition: succeededOrFailed()
  displayName: 'HIP Catch Test Results'